// <auto-generated />
using System;
using EventsWebApi.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventsWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250522105147_SeedingCategories")]
    partial class SeedingCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventsWebApi.Data.Entities.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("58253062-17d0-48cd-8cb5-35ee499fb56d"),
                            CategoryName = "Music"
                        },
                        new
                        {
                            Id = new Guid("7e95dcfb-2051-4983-bc68-e9adfeaa86d1"),
                            CategoryName = "Health & Wellness"
                        },
                        new
                        {
                            Id = new Guid("a0b781b4-48fe-4331-b809-4ee25cb25301"),
                            CategoryName = "Art & Design"
                        },
                        new
                        {
                            Id = new Guid("e910e72c-3d6f-4f30-b271-9e7cf46862a0"),
                            CategoryName = "Technology"
                        },
                        new
                        {
                            Id = new Guid("7b536871-cc9f-491f-854d-289fefb93cc7"),
                            CategoryName = "Food & Culinary"
                        },
                        new
                        {
                            Id = new Guid("8172ad1b-5298-48fd-a346-a4ed873484f3"),
                            CategoryName = "Fashion"
                        },
                        new
                        {
                            Id = new Guid("987444d6-4256-4cc9-b76e-cb6c9be1875c"),
                            CategoryName = "Outdoor & Activities"
                        },
                        new
                        {
                            Id = new Guid("db013c07-6c5d-4b7e-8d82-d2eab1a860f4"),
                            CategoryName = "Film & Cinema"
                        },
                        new
                        {
                            Id = new Guid("13267c45-1219-4cea-ba4b-336b585dca96"),
                            CategoryName = "Theater & Performing Arts"
                        },
                        new
                        {
                            Id = new Guid("915f321e-1ca7-4ebf-98c8-01e7f8188f68"),
                            CategoryName = "Literature & Book Fairs"
                        },
                        new
                        {
                            Id = new Guid("ad2ccfe4-54d3-44c7-a0a5-d25e692376f1"),
                            CategoryName = "Sports & Fitness"
                        },
                        new
                        {
                            Id = new Guid("207a467e-b44b-4c95-a0e9-f7e0ef66a455"),
                            CategoryName = "Gaming & eSports"
                        },
                        new
                        {
                            Id = new Guid("c585c7a6-c5ac-4f52-83c2-fbcf0274e257"),
                            CategoryName = "History & Heritage"
                        },
                        new
                        {
                            Id = new Guid("043c6f2a-adef-494b-9038-f8d7cdc154a8"),
                            CategoryName = "Crafts & Hobbies"
                        },
                        new
                        {
                            Id = new Guid("16b2d573-ad6f-460d-8db4-168a6fce6044"),
                            CategoryName = "Festival"
                        },
                        new
                        {
                            Id = new Guid("14fa8c26-d45f-48a4-9fab-214558ef179a"),
                            CategoryName = "Community & Local Events"
                        });
                });

            modelBuilder.Entity("EventsWebApi.Data.Entities.EventEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventEndDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<Guid?>("EventImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventStartDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<Guid?>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("EventsWebApi.Data.Entities.EventEntity", b =>
                {
                    b.HasOne("EventsWebApi.Data.Entities.CategoryEntity", "Category")
                        .WithMany("Events")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EventsWebApi.Data.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
